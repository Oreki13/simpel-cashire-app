[{"/home/arfandy/project/frontend/cashier/src/index.js":"1","/home/arfandy/project/frontend/cashier/src/reportWebVitals.js":"2","/home/arfandy/project/frontend/cashier/src/App.js":"3","/home/arfandy/project/frontend/cashier/src/layout/sidebar.js":"4","/home/arfandy/project/frontend/cashier/src/context/index.js":"5","/home/arfandy/project/frontend/cashier/src/layout/theLayout.js":"6","/home/arfandy/project/frontend/cashier/src/layout/header.js":"7","/home/arfandy/project/frontend/cashier/src/routes/menu.js":"8","/home/arfandy/project/frontend/cashier/src/layout/content.js":"9","/home/arfandy/project/frontend/cashier/src/routes/routes.js":"10","/home/arfandy/project/frontend/cashier/src/views/dashboard.js":"11","/home/arfandy/project/frontend/cashier/src/views/transaction.js":"12","/home/arfandy/project/frontend/cashier/src/component/loading.js":"13","/home/arfandy/project/frontend/cashier/src/options.js":"14","/home/arfandy/project/frontend/cashier/src/config/firebase.js":"15","/home/arfandy/project/frontend/cashier/src/component/tableHistory.js":"16","/home/arfandy/project/frontend/cashier/src/component/tableTransaction.js":"17","/home/arfandy/project/frontend/cashier/src/component/boxOrder.js":"18","/home/arfandy/project/frontend/cashier/src/component/dialog.js":"19","/home/arfandy/project/frontend/cashier/src/component/rowColapse.js":"20","/home/arfandy/project/frontend/cashier/src/component/dialogShop.js":"21","/home/arfandy/project/frontend/cashier/src/views/items.js":"22","/home/arfandy/project/frontend/cashier/src/component/tableItems.js":"23","/home/arfandy/project/frontend/cashier/src/component/dialogAddItems.js":"24"},{"size":609,"mtime":1611040172246,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1610871578523,"results":"27","hashOfConfig":"26"},{"size":1203,"mtime":1611070075239,"results":"28","hashOfConfig":"26"},{"size":2564,"mtime":1610933223134,"results":"29","hashOfConfig":"26"},{"size":939,"mtime":1611070206890,"results":"30","hashOfConfig":"26"},{"size":610,"mtime":1611118919920,"results":"31","hashOfConfig":"26"},{"size":2655,"mtime":1611070349046,"results":"32","hashOfConfig":"26"},{"size":439,"mtime":1611115521170,"results":"33","hashOfConfig":"26"},{"size":966,"mtime":1611070123058,"results":"34","hashOfConfig":"26"},{"size":475,"mtime":1611115476010,"results":"35","hashOfConfig":"26"},{"size":5619,"mtime":1611115895269,"results":"36","hashOfConfig":"26"},{"size":1737,"mtime":1611069694427,"results":"37","hashOfConfig":"26"},{"size":189,"mtime":1610896862928,"results":"38","hashOfConfig":"26"},{"size":66,"mtime":1610931119531,"results":"39","hashOfConfig":"26"},{"size":615,"mtime":1611069826249,"results":"40","hashOfConfig":"26"},{"size":2057,"mtime":1611070413773,"results":"41","hashOfConfig":"26"},{"size":9022,"mtime":1611113623633,"results":"42","hashOfConfig":"26"},{"size":6794,"mtime":1611069279030,"results":"43","hashOfConfig":"26"},{"size":685,"mtime":1611045852544,"results":"44","hashOfConfig":"26"},{"size":2929,"mtime":1611104066652,"results":"45","hashOfConfig":"26"},{"size":6110,"mtime":1611112912498,"results":"46","hashOfConfig":"26"},{"size":3959,"mtime":1611118892098,"results":"47","hashOfConfig":"26"},{"size":3304,"mtime":1611118999309,"results":"48","hashOfConfig":"26"},{"size":4068,"mtime":1611118970564,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"16sv38n",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/arfandy/project/frontend/cashier/src/index.js",[],["101","102"],"/home/arfandy/project/frontend/cashier/src/reportWebVitals.js",[],"/home/arfandy/project/frontend/cashier/src/App.js",["103"],"import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React, { lazy, useContext } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Loading from \"./component/loading\";\nimport { AppContext } from \"./context/index\";\nconst MyApp = lazy(() => import(\"./layout/theLayout\"));\n\nfunction App() {\n  const { myTheme, mainPrimaryColor, mainSecondaryColor } = useContext(\n    AppContext\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: myTheme,\n          primary: {\n            main: mainPrimaryColor,\n          },\n          secondary: {\n            main: mainSecondaryColor,\n          },\n        },\n      }),\n    [myTheme]\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <React.Suspense fallback={() => <Loading />}>\n          <Switch>\n            <Route\n              path=\"/\"\n              name=\"Home\"\n              component={(props) => <MyApp {...props} />}\n            />\n          </Switch>\n        </React.Suspense>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/home/arfandy/project/frontend/cashier/src/layout/sidebar.js",[],"/home/arfandy/project/frontend/cashier/src/context/index.js",[],"/home/arfandy/project/frontend/cashier/src/layout/theLayout.js",[],"/home/arfandy/project/frontend/cashier/src/layout/header.js",[],"/home/arfandy/project/frontend/cashier/src/routes/menu.js",[],"/home/arfandy/project/frontend/cashier/src/layout/content.js",[],"/home/arfandy/project/frontend/cashier/src/routes/routes.js",[],"/home/arfandy/project/frontend/cashier/src/views/dashboard.js",[],"/home/arfandy/project/frontend/cashier/src/views/transaction.js",[],"/home/arfandy/project/frontend/cashier/src/component/loading.js",[],"/home/arfandy/project/frontend/cashier/src/options.js",[],"/home/arfandy/project/frontend/cashier/src/config/firebase.js",[],"/home/arfandy/project/frontend/cashier/src/component/tableHistory.js",[],"/home/arfandy/project/frontend/cashier/src/component/tableTransaction.js",[],"/home/arfandy/project/frontend/cashier/src/component/boxOrder.js",["104"],"import {\n  Box,\n  Button,\n  CircularProgress,\n  Divider,\n  InputAdornment,\n  Paper,\n  TextField,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport { blue } from \"@material-ui/core/colors\";\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\nimport LocalAtmIcon from \"@material-ui/icons/LocalAtm\";\nimport React, { useEffect, useState } from \"react\";\nimport firebase from \"../config/firebase\";\nimport DialogComponent from \"./dialog\";\n\nconst MyTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: blue[300],\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: blue[300],\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"&.Mui-focused fieldset\": {\n        borderColor: blue[300],\n      },\n    },\n    \"& input::-webkit-clear-button, & input::-webkit-outer-spin-button, & input::-webkit-inner-spin-button\": {\n      display: \"none\",\n    },\n  },\n})(TextField);\n\nexport default function BoxOrder({\n  totalPay,\n  colData,\n  setNameItem,\n  setPrice,\n  setQty,\n  setTotal,\n  setTotalPay,\n  setColData,\n}) {\n  const [cash, setCash] = useState();\n  const [credit, setCredit] = useState();\n  const [paying, setPaying] = useState(0);\n  const [changes, setChanges] = useState(0);\n  const [btnPay, setBtnPay] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onChanges = (val) => {\n    const min = val - totalPay;\n    if (colData.length > 0) {\n      if (val >= totalPay) {\n        setChanges(min);\n        setBtnPay(false);\n      } else {\n        setChanges(0);\n        setBtnPay(true);\n      }\n    } else {\n      setChanges(0);\n      setBtnPay(true);\n    }\n  };\n\n  const handelChangePay = (name, val) => {\n    if (name === \"cash\") {\n      setCash(parseInt(val));\n      setPaying(parseInt(val));\n      onChanges(val);\n    } else if (name === \"credit\") {\n      setCredit(parseInt(val));\n      setPaying(parseInt(val));\n      onChanges(val);\n    }\n  };\n\n  useEffect(() => {\n    if (cash > 0) {\n      onChanges(cash);\n    } else if (credit > 0) {\n      onChanges(credit);\n    }\n  }, [totalPay]);\n\n  const handelPay = () => {\n    setIsLoading(true);\n    const data = {\n      date: firebase.firestore.Timestamp.now(),\n      data: colData,\n      payment: {\n        cash: cash > 0 ? true : false,\n        credit: credit > 0 ? true : false,\n        pay: paying,\n        changes: changes,\n      },\n      shopPrice: totalPay,\n    };\n\n    firebase\n      .firestore()\n      .collection(\"cashire\")\n      .add(data)\n      .then((v) => {\n        setNameItem(\"\");\n        setPrice(\"\");\n        setQty(1);\n        setTotal(0);\n        setPaying(0);\n        setBtnPay(true);\n        setCash(\"\");\n        setCredit(\"\");\n        setColData([]);\n        setTotalPay(0);\n        setChanges(0);\n        setOpen(true);\n        setIsLoading(false);\n      })\n      .catch((e) => console.log(e));\n  };\n\n  return (\n    <Paper style={{ padding: 15 }}>\n      <DialogComponent\n        open={open}\n        close={() => setOpen(false)}\n        title=\"Informasi\"\n        message=\"Data Berhasil di Input\"\n        action={<Button onClick={() => setOpen(false)}>Close</Button>}\n      />\n      <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\n        <Box\n          marginY={1}\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"h6\">Total</Typography>\n\n          <Typography noWrap variant=\"h5\">\n            Rp {totalPay.toLocaleString(\"id-ID\")}\n          </Typography>\n        </Box>\n        <Box display=\"flex\" marginY={1} justifyContent=\"flex-end\">\n          <Box width={100}>\n            <Typography variant=\"subtitle2\">Dibayarkan</Typography>\n          </Box>\n          <Box width={100}>\n            <Typography noWrap align=\"right\" variant=\"subtitle2\">\n              Rp {paying > 0 ? paying.toLocaleString(\"id-ID\") : 0}\n            </Typography>\n          </Box>\n        </Box>\n        <Box display=\"flex\" marginY={1} justifyContent=\"flex-end\">\n          <Box width={100}>\n            <Typography variant=\"subtitle2\">Kembalian</Typography>\n          </Box>\n          <Box width={100}>\n            <Typography noWrap align=\"right\" variant=\"subtitle2\">\n              Rp {changes > 0 ? changes.toLocaleString(\"id-ID\") : 0}\n            </Typography>\n          </Box>\n        </Box>\n        <Divider />\n        <Box marginY={1}>\n          <Typography variant=\"h6\">Tambahkan Pembayaran</Typography>\n        </Box>\n        <Box\n          marginY={1}\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Box flex={1}>\n            <Typography variant=\"body1\">Cash</Typography>\n          </Box>\n          <Box flex={2} textAlign=\"right\">\n            <MyTextField\n              type=\"number\"\n              value={cash}\n              name=\"cash\"\n              disabled={credit > 0 || colData.length < 1 ? true : false}\n              onChange={(v) => handelChangePay(v.target.name, v.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <LocalAtmIcon />\n                  </InputAdornment>\n                ),\n              }}\n              label=\"Masukkan total belanja\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </Box>\n        <Box\n          marginY={1}\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Box flex={1}>\n            <Typography variant=\"body1\">Credit Card</Typography>\n          </Box>\n          <Box flex={2} textAlign=\"right\">\n            <MyTextField\n              type=\"number\"\n              value={credit}\n              name=\"credit\"\n              disabled={cash > 0 || colData.length < 1 ? true : false}\n              onChange={(v) => handelChangePay(v.target.name, v.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <CreditCardIcon />\n                  </InputAdornment>\n                ),\n              }}\n              label=\"Masukkan total belanja\"\n              variant=\"outlined\"\n            />\n          </Box>\n        </Box>\n        <Box textAlign=\"center\" marginY={1}>\n          <Button\n            onClick={() => handelPay()}\n            disabled={btnPay || isLoading}\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ width: 100, height: 40 }}\n          >\n            {isLoading ? (\n              <CircularProgress style={{ color: \"white\" }} size={25} />\n            ) : (\n              \"Bayar\"\n            )}\n          </Button>\n        </Box>\n      </Box>\n    </Paper>\n  );\n}\n","/home/arfandy/project/frontend/cashier/src/component/dialog.js",[],"/home/arfandy/project/frontend/cashier/src/component/rowColapse.js",[],"/home/arfandy/project/frontend/cashier/src/component/dialogShop.js",["105","106","107","108"],"/home/arfandy/project/frontend/cashier/src/views/items.js",[],"/home/arfandy/project/frontend/cashier/src/component/tableItems.js",[],"/home/arfandy/project/frontend/cashier/src/component/dialogAddItems.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":27,"column":5,"nodeType":"115","endLine":27,"endColumn":14,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":90,"column":6,"nodeType":"115","endLine":90,"endColumn":16,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":76,"column":23,"nodeType":"121","messageId":"122","endLine":76,"endColumn":37},{"ruleId":"113","severity":1,"message":"123","line":110,"column":6,"nodeType":"115","endLine":110,"endColumn":8,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":179,"column":11,"nodeType":"121","messageId":"122","endLine":179,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":179,"column":33,"nodeType":"128","messageId":"129","endLine":179,"endColumn":35},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook React.useMemo has missing dependencies: 'mainPrimaryColor' and 'mainSecondaryColor'. Either include them or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has missing dependencies: 'cash', 'credit', and 'onChanges'. Either include them or remove the dependency array.",["133"],"no-unused-vars","'setRowsPerPage' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'rowsPerPage'. Either include it or remove the dependency array.",["134"],"'list' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [mainPrimaryColor, mainSecondaryColor, myTheme]",{"range":"141","text":"142"},"Update the dependencies array to be: [cash, credit, onChanges, totalPay]",{"range":"143","text":"144"},"Update the dependencies array to be: [rowsPerPage]",{"range":"145","text":"146"},[781,790],"[mainPrimaryColor, mainSecondaryColor, myTheme]",[2096,2106],"[cash, credit, onChanges, totalPay]",[3009,3011],"[rowsPerPage]"]